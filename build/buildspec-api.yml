version: 0.2

env:
  variables:
    MAJOR_VERSION: "0"
    MINOR_VERSION: "1"

phases:
  install:
    commands:
      - echo Installing HTTPS for APT...
      - wget -q http://archive.ubuntu.com/ubuntu/pool/main/a/apt/apt-transport-https_1.0.1ubuntu2_amd64.deb
      - dpkg -i apt-transport-https_1.0.1ubuntu2_amd64.deb
      - rm apt-transport-https_1.0.1ubuntu2_amd64.deb

      - echo Registering .Net Core Feed...
      - wget -q https://packages.microsoft.com/config/ubuntu/14.04/packages-microsoft-prod.deb
      - dpkg -i packages-microsoft-prod.deb
      - rm packages-microsoft-prod.deb

      - echo Updating APT...
      - apt-get clean
      - apt-get update

      - echo Updating DPKG...
      - apt-get install -y dpkg

      - echo Installing HTTPS for APT...
      - apt-get install -y apt-transport-https

      - echo Installing .Net Core...
      - apt-get install -y dotnet-sdk-2.2
  pre_build:
    commands:
      - echo Logging into Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_REGION)
      - REPOSITORY_URI=615504230749.dkr.ecr.ap-southeast-2.amazonaws.com/easy-trace-api
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building docker Image...
      - echo Version - $IMAGE_TAG
      - docker build -t $REPOSITORY_URI:latest ./src
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

      - echo Build Completed on `date`
      - echo Pushing Docker Image...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo WRITING IMAGE DEFINITIONS FILE
      - printf [{\"name\":\"api\",\"imageUri\":\"$REPOSITORY_URI:$IMAGE_TAG\"}] > imagedefinitions.json

artifacts:
  files: imagedefinitions.json